% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_swmm_model.R
\name{create_swmm_model}
\alias{create_swmm_model}
\title{Create a SWMM model including a drainage network and recharging surfaces.}
\usage{
create_swmm_model(
  streets,
  dtm,
  outfalls,
  crs_default,
  buffer,
  snap_dist,
  epsilon,
  lim,
  min_junc_depth,
  mean_junc_depth,
  max_junc_depth,
  min_slope,
  max_slope,
  ds,
  stepwise = FALSE,
  break_closed_loops = FALSE,
  delete_disconnected = FALSE,
  breaks_at_hills = FALSE,
  break_loops = TRUE,
  short_cut_sinks = FALSE,
  direct_drainage_sinks = TRUE,
  boundary_polygon,
  landuse_sf,
  landuse_classes,
  path_timeseries,
  path_options,
  infiltration,
  path_out
)
}
\arguments{
\item{streets}{Street polyline data of class sf. On basis of the street 
polylines the drainage network is setup. Street polyline data can be extracted 
for example from openstreetmaps.}

\item{dtm}{Digital terrain information either of class RasterLayer or as a 
triangulated grid of class sf. Surface height data is required to add heights
 to junctions and to define the flow directions in the conduits subsequently.}

\item{outfalls}{Outfall point data of class sf. The network drains towards 
these points.}

\item{crs_default}{A proj4string or EPSG Code to specify the default 
coordinate reference system.}

\item{buffer}{Minimum distance between street nodes (unit: meter). If distance 
is smaller street nodes are summarized. A parameter for quality checks on street 
polyline data.}

\item{snap_dist}{Minimum distance between a polyline and an ending node (unit: 
meter). If distance is smaller street polylines are connected. A parameter for 
quality checks on street polyline data.}

\item{epsilon}{Distance to ideal line between start and end point (unit: meter). 
Parameter from the Douglas Peucker Algorithm that is needed to simplify the 
shape of polylines. See \link[kmlShape]{DouglasPeuckerEpsilon} for further 
information.}

\item{lim}{The maximum distance between two junctions (unit: meter). Can be 
interpreted as maximum pipe length. To avoid very short pipes this values can 
be exceeded occasionally.}

\item{min_junc_depth}{Minimum junction depth (unit: meter).}

\item{mean_junc_depth}{Mean junction depth (unit: meter).}

\item{max_junc_depth}{Maximum junction depth (unit: meter).}

\item{min_slope}{Minimum slope value (unit: -)}

\item{max_slope}{Maximum slope value (unit: -)}

\item{ds}{Threshold for local sinks in the network (unit: meter). If the depth 
of a local sink is greater than ds (depression storage). A shortcut is implemented 
either to the nearest outfall if direct_drainage_sinks is set TRUE or to the 
nearest lower junction if short_cut_sinks is set TRUE.}

\item{stepwise}{Stepwise construction of the network if set to TRUE. When a 
stepwise construction is chosen, at first a base network including junctions 
at start, end and crossing fix points is computed. Then the local sink nodes 
are corrected. (default: FALSE)}

\item{break_closed_loops}{- (default: FALSE)}

\item{delete_disconnected}{- (default: FALSE)}

\item{breaks_at_hills}{If set to TRUE: The drainage network is forked at 
junctions that have incoming and more than one outgoing pipe. Parameter to 
increase the linearity of the network. (default: FALSE)}

\item{break_loops}{If set to TRUE: The drainage network is forked at junctions 
that have no incoming but more than one outgoing pipe. Parameter to increase 
the linearity of the network. (default: FALSE)}

\item{short_cut_sinks}{If set to TRUE: drainage of local sinks that are deeper 
than ds towards the nearest lower junction. (default: FALSE)}

\item{direct_drainage_sinks}{If set to TRUE (default): drainage of local sinks 
that are deeper than ds towards the nearest outfall node. (default: TRUE)}

\item{boundary_polygon}{A polygon file of class sf defining the model borders.}

\item{landuse_sf}{A polygon file of class sf including landuse informations.}

\item{landuse_classes}{A data.frame including percentages of imperviousness 
of the different landuse classes. See vignette.}

\item{path_timeseries}{Path to a raindata file in dat format including rain 
data to size the pipe diameter.}

\item{path_options}{Path to an option file specifying swmm options. See 
\link[swmmr]{shp_to_inp}}

\item{infiltration}{A data.frame specifying infiltration information for soil 
classes. Currently, homogenous soil for the model area is assumed.}

\item{path_out}{Directory to store the swmm input file and the model data in 
shp format to.}
}
\value{
A list of sf objects junctions, conduits, outfalls and subcatchments.
}
\description{
Fully automated generation of a SWMM model including the drainage network and 
recharging surfaces based on open source spatial data. Requires street polylines, 
a digital terrain model, outfall point data, land cover data and some user 
defined parameters as input. First creates a drainage network following the 
location of the streets and the topography, then adds recharging surfaces and
finally sized the pipe diameters while running a complete SWMM model. Stores 
SWMM input file and shp-files containing the drainage netwrok information in 
a defined directory. Returns a list of the sf objects junctions, conduits and 
outalls that can be converted to a SWMM *.inp file using swmmr functions 
afterwards.
}
